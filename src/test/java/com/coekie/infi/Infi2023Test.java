package com.coekie.infi;

import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.Test;

class Infi2023Test {
  @Test
  void examples() {
    assertEquals(4.0, Infi2023.solvePoints(Infi2023.parseLine("(-1, 0), (1, 4), (1, -4)")));
    assertEquals(3.4003676,
        Infi2023.solvePoints(Infi2023.parseLine("(0, 4), (3, -2), (-1, -2), (-2, 0)")), 0.000001);
  }

  @Test
  void real() {
    String input = """
        (31, 86), (87, -47), (-76, -30), (82, 80)
        (35, 20), (83, 31), (41, -68), (-24, 17)
        (85, 69), (-25, -19), (-85, 55), (-57, 13)
        (88, 76), (18, -39), (-59, 59), (-1, -22), (26, 27)
        (-92, 96), (-55, 13), (-10, -89), (0, -84), (-82, 13), (72, 97)
        (96, -81), (-86, -98), (-51, 71), (-68, -90), (11, 74)
        (-97, 49), (-26, -21), (-76, -69), (-38, 6), (49, 97), (-43, 89), (24, 61)
        (-97, -45), (-74, -6), (82, -85), (79, -86), (-36, -79), (44, -3), (-72, 55)
        (10, -3), (-78, -49), (9, 41), (37, -80), (92, 87)
        (-34, -53), (6, 39), (-70, -10), (-59, -41)
        (77, 83), (-83, 91), (78, -76), (34, -91), (-43, -21), (34, -67), (50, -46)
        (60, 66), (-27, -48), (-51, -35), (-66, -67), (6, 31)
        (31, 8), (25, 90), (-47, -45), (69, 87), (17, 26), (-20, -70)
        (-15, -93), (28, 63), (13, -47), (-83, 15)
        (-81, 78), (-36, -83), (89, -90), (1, 42), (50, 10), (-40, -71), (-8, -75)
        (-34, -74), (-22, -36), (62, 36), (60, -20), (36, 99)
        (-59, 37), (-29, 20), (-48, 14), (-67, 38), (-12, 46), (26, -64), (-34, 59)
        (74, 76), (69, 70), (-57, 92), (81, -57), (-4, -13)
        (53, 52), (-44, -41), (-2, 27), (-83, -78), (68, 64), (-29, -71), (-42, 45)
        (54, 36), (38, 40), (89, -89), (5, -24), (62, 84), (11, 66), (56, 74)
        (-6, 74), (-67, -23), (61, -20), (-18, -71)
        (98, -82), (-56, 90), (21, 2), (46, 11)
        (-53, -62), (-56, 5), (56, -3)
        (-52, -24), (-7, -25), (87, 61), (-39, -52), (9, -30), (-3, 96), (80, 84)
        (-29, 7), (-10, 41), (70, 67), (14, 55), (-41, -62)""";

    assertEquals(2294, Infi2023.solve(input));
  }
}
